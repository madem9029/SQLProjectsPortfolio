<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDashboard_17292363533920' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (covidTableauTable1)' inline='true' name='federated.03abqv81gkg14o1fbgrdn08l5v8n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidTableauTable1' name='excel-direct.1webjh90yvuvdg1ektkld1hhz9fm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MAdem/OneDrive/Documents/TABLEAU TABLES/covidTableauTable1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1webjh90yvuvdg1ektkld1hhz9fm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='totalCases' ordinal='0' />
            <column datatype='integer' name='totalDeaths' ordinal='1' />
            <column datatype='real' name='deathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalCases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>totalCases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_80E55E4ACFBF4EF3920B2B7B959CA780]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalDeaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalDeaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>totalDeaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_80E55E4ACFBF4EF3920B2B7B959CA780]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>deathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_80E55E4ACFBF4EF3920B2B7B959CA780]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_80E55E4ACFBF4EF3920B2B7B959CA780]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[deathPercentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[totalCases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[totalDeaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MAdem/AppData/Local/Temp/TableauTemp/#TableauTemp_1d85pci1ywipop1f1q5060wr95sg.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/18/2024 06:09:17 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>totalCases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[totalCases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>totalCases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>totalDeaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[totalDeaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>totalDeaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[deathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_80E55E4ACFBF4EF3920B2B7B959CA780'>
            <properties context=''>
              <relation connection='excel-direct.1webjh90yvuvdg1ektkld1hhz9fm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='totalCases' ordinal='0' />
                  <column datatype='integer' name='totalDeaths' ordinal='1' />
                  <column datatype='real' name='deathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidTableauTable4)' inline='true' name='federated.0i8g9710idq37i17yil751ouetr5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidTableauTable4' name='excel-direct.1ojujt31sxke3317nejug0mg67u2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MAdem/OneDrive/Documents/TABLEAU TABLES/covidTableauTable4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ojujt31sxke3317nejug0mg67u2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highestInfectionCount' ordinal='3' />
            <column datatype='real' name='InfectionPercentage' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_464516B032B44F439022094F1739686D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_464516B032B44F439022094F1739686D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_464516B032B44F439022094F1739686D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_464516B032B44F439022094F1739686D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>InfectionPercentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_464516B032B44F439022094F1739686D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infection Percentage' datatype='real' name='[InfectionPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_464516B032B44F439022094F1739686D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MAdem/AppData/Local/Temp/TableauTemp/#TableauTemp_143y6r51lsa3bw10nmcaw1hsz0w5.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/18/2024 02:02:22 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>372</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>372</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6876</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>36571</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InfectionPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[InfectionPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>InfectionPercentage</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43677</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_464516B032B44F439022094F1739686D'>
            <properties context=''>
              <relation connection='excel-direct.1ojujt31sxke3317nejug0mg67u2' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highestInfectionCount' ordinal='3' />
                  <column datatype='real' name='InfectionPercentage' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidTableauTable3)' inline='true' name='federated.0w70d370t5kglg1cosxw91veidvf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidTableauTable3' name='excel-direct.1gzw7et06sm77z11t2dlo05zy0dk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MAdem/OneDrive/Documents/TABLEAU TABLES/covidTableauTable3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1gzw7et06sm77z11t2dlo05zy0dk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highestInfectionCount' ordinal='2' />
            <column datatype='real' name='InfectionPercentage' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FEB7CDF9DE6F490691579682BE01CC5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FEB7CDF9DE6F490691579682BE01CC5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FEB7CDF9DE6F490691579682BE01CC5F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>InfectionPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[InfectionPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>InfectionPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FEB7CDF9DE6F490691579682BE01CC5F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Infection Percentage' datatype='real' name='[InfectionPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FEB7CDF9DE6F490691579682BE01CC5F]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MAdem/AppData/Local/Temp/TableauTemp/#TableauTemp_0tjiu3m1wgc6fm147cqrm02yq43c.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/18/2024 02:02:03 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>255</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>225</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>InfectionPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[InfectionPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>InfectionPercentage</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FEB7CDF9DE6F490691579682BE01CC5F'>
            <properties context=''>
              <relation connection='excel-direct.1gzw7et06sm77z11t2dlo05zy0dk' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highestInfectionCount' ordinal='2' />
                  <column datatype='real' name='InfectionPercentage' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidTableauTable2)' inline='true' name='federated.1xew72i0caipl51cefogq17jlbef' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidTableauTable2' name='excel-direct.1qaikdj1li93i616it2bi18aqvqw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MAdem/OneDrive/Documents/TABLEAU TABLES/covidTableauTable2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1qaikdj1li93i616it2bi18aqvqw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='totalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_24A14ECC43CF434A82D24613275D3A8D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>totalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_24A14ECC43CF434A82D24613275D3A8D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_24A14ECC43CF434A82D24613275D3A8D]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Death Count' datatype='integer' name='[totalDeathCount]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MAdem/AppData/Local/Temp/TableauTemp/#TableauTemp_020i5k70fw3jzt16p8wf305asqye.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/18/2024 02:01:31 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet1_24A14ECC43CF434A82D24613275D3A8D]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>totalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[totalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>totalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_24A14ECC43CF434A82D24613275D3A8D]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='green_10_0' type='palette'>
            <map to='#24693d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#2f8243'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e9a51'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#6ab25f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#87cc79'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_24A14ECC43CF434A82D24613275D3A8D'>
            <properties context=''>
              <relation connection='excel-direct.1qaikdj1li93i616it2bi18aqvqw' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='totalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidTableauTable1)' name='federated.03abqv81gkg14o1fbgrdn08l5v8n' />
          </datasources>
          <datasource-dependencies datasource='federated.03abqv81gkg14o1fbgrdn08l5v8n'>
            <column caption='Death Percentage' datatype='real' name='[deathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[deathPercentage]' derivation='Sum' name='[sum:deathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalCases]' derivation='Sum' name='[sum:totalCases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[totalDeaths]' derivation='Sum' name='[sum:totalDeaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[totalCases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[totalDeaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:deathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:totalCases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:totalDeaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:totalCases:qk]&quot;</bucket>
              <bucket>&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:totalDeaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:deathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]' value='135' />
            <format attr='height' value='55' />
            <format attr='text-format' field='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[sum:deathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-align' field='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#077a7c' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.03abqv81gkg14o1fbgrdn08l5v8n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.022099494934082' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2D3F6643-85CC-4164-8A2C-1C8AF96DE4A1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidTableauTable2)' name='federated.1xew72i0caipl51cefogq17jlbef' />
          </datasources>
          <datasource-dependencies datasource='federated.1xew72i0caipl51cefogq17jlbef'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[totalDeathCount]' derivation='Sum' name='[sum:totalDeathCount:qk]' pivot='key' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[totalDeathCount]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1xew72i0caipl51cefogq17jlbef].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1xew72i0caipl51cefogq17jlbef].[none:location:nk]' value='98' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1xew72i0caipl51cefogq17jlbef].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0984530448913574' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xew72i0caipl51cefogq17jlbef].[sum:totalDeathCount:qk]</rows>
        <cols>[federated.1xew72i0caipl51cefogq17jlbef].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{BF5A31A6-6E1E-40CE-9E82-3131970153D1}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infection Percentage Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidTableauTable3)' name='federated.0w70d370t5kglg1cosxw91veidvf' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0w70d370t5kglg1cosxw91veidvf'>
            <column caption='Infection Percentage' datatype='real' name='[InfectionPercentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[InfectionPercentage]' derivation='Sum' name='[sum:InfectionPercentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0w70d370t5kglg1cosxw91veidvf].[Longitude (generated)]' field-type='quantitative' max='4134062.5416991208' min='-14111498.637857063' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0w70d370t5kglg1cosxw91veidvf].[Latitude (generated)]' field-type='quantitative' max='9022230.8436344545' min='-88171.591308786534' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0w70d370t5kglg1cosxw91veidvf].[none:location:nk]' />
              <color column='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' />
              <geometry column='[federated.0w70d370t5kglg1cosxw91veidvf].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0w70d370t5kglg1cosxw91veidvf].[Latitude (generated)]</rows>
        <cols>[federated.0w70d370t5kglg1cosxw91veidvf].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4A435E87-2BB5-4278-8EAC-721F0A87997A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidTableauTable4)' name='federated.0i8g9710idq37i17yil751ouetr5' />
          </datasources>
          <datasource-dependencies datasource='federated.0i8g9710idq37i17yil751ouetr5'>
            <column caption='Infection Percentage' datatype='real' name='[InfectionPercentage]' role='measure' type='quantitative' />
            <column-instance column='[InfectionPercentage]' derivation='Avg' name='[avg:InfectionPercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[InfectionPercentage]' derivation='Avg' forecast-column-base='[avg:InfectionPercentage:qk]' forecast-column-type='forecast-value' name='[fVal:avg:InfectionPercentage:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0i8g9710idq37i17yil751ouetr5].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0i8g9710idq37i17yil751ouetr5].[tmn:date:qk]' value='66' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]' />
              <text column='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]' />
              <color column='[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]' />
              <text column='[federated.0i8g9710idq37i17yil751ouetr5].[fVal:avg:InfectionPercentage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1316' />
                <format attr='maxwidth' value='1316' />
                <format attr='minheight' value='670' />
                <format attr='maxheight' value='670' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0i8g9710idq37i17yil751ouetr5].[fVal:avg:InfectionPercentage:qk]</rows>
        <cols>[federated.0i8g9710idq37i17yil751ouetr5].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{B14EE112-0742-4950-B7D2-82C994505DA9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98110' id='9' param='horz' type-v2='layout-flow' w='97734' x='1133' y='945'>
            <zone h='98110' id='7' type-v2='layout-basic' w='75071' x='1133' y='945'>
              <zone h='16698' id='3' name='Sheet 1' w='37526' x='1133' y='945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32357' id='5' name='Sheet 2' w='37526' x='1133' y='17643'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49055' id='6' name='Sheet 3' w='37545' x='38659' y='945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49055' id='11' name='Sheet 4' w='69481' x='1133' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49055' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]&#10;[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]' type-v2='color' w='5590' x='70614' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98110' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='22663' x='76204' y='945'>
              <zone h='7675' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' type-v2='color' w='22663' x='76204' y='945'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98110' id='21' param='vert' type-v2='layout-flow' w='97734' x='1133' y='945'>
                <zone fixed-size='125' h='16698' id='3' is-fixed='true' name='Sheet 1' w='37526' x='1133' y='945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49055' id='6' is-fixed='true' name='Sheet 3' w='37545' x='38659' y='945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7675' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' type-v2='color' w='22663' x='76204' y='945'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32357' id='5' is-fixed='true' name='Sheet 2' w='37526' x='1133' y='17643'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49055' id='11' is-fixed='true' name='Sheet 4' w='69481' x='1133' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49055' id='12' name='Sheet 4' pane-specification-id='0' param='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]&#10;[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]' type-v2='color' w='5590' x='70614' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{23359A16-48DB-4813-B143-995C86E50506}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='282'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03abqv81gkg14o1fbgrdn08l5v8n].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B371310B-E64F-4B17-8C66-F4E81361D727}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='148'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1xew72i0caipl51cefogq17jlbef].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2ADFE34-9988-4990-9A90-4E372F8BFDBB}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0w70d370t5kglg1cosxw91veidvf].[sum:InfectionPercentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0w70d370t5kglg1cosxw91veidvf].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{49C3E456-C696-4029-A4AF-CAD3AC2CF123}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]&#10;[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]</field>
            <field>[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]</field>
            <field>[federated.0i8g9710idq37i17yil751ouetr5].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B44A0CA1-0E51-4D2A-87BF-294F9AAADFAF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0i8g9710idq37i17yil751ouetr5].[none:Forecast Indicator:nk]</field>
              <field>[federated.0i8g9710idq37i17yil751ouetr5].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3EB6AB8C-5E50-40E0-AE95-1472A4F5A50B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Bd13ng+Ts3vJxf5xzQCTmRBEgQpEhRoihrJFmWLGd7Z2xXzezUztZW
      7e78Mbt/7dZWrat2ttaz43LY8ThIsmzJFCVKpBgAgsgAkWPnHF7365fzvffsH6/RQCM3uhHZ
      PxbY3e+mc+873z3f+c4XhJRSssYan0OEEEJ53I1YY43HyZoArPG5Zk0A1vhcsyYAa3yuWROA
      NVaFYjbGRx9+QP/I9D33jUajAFw9f5r9Bw5RtG63l8XAwMDCrwbRWILoXJSbdy3l5xkYLF/T
      LOU4cersku2x+SjWXcw84m5WoFwmhebwoKti8bNUKonX67t131QKze1FfwCRSiVTeH3e5R/4
      BGCZBkODI7R0tKM+7sY8RrKxMd4/cA67ajA5OU1HWweO6mrS01MEfU6OnR1k/YYmMlmD1NQ4
      e9/6Br2nj5Av5LCF6rAKJWyiSBEbdZWVKMIkMjdHMTmFdIQYmkiwfWsnZjZOTtoRmQSWM8AL
      m6s5caSfaKGAx6USTZvI+TFq2jcgpSQ6Ncz2vV+hvb7iljbfYgUy80k++vAjjh49Qv/IFINX
      z5LImUsOOn3m1G0fwPD50yRK5d9//F//jLN9k6Sn+zg7OHPPh3f61Jn7fMyPlzP79zNXWvo8
      +s8epuQIIu5wzKXLFwGIzc2QL932VbfI6cMf8MH+g/z8p++QKNx93ztjcvnSlWUdkYr0870f
      /oRP9/2SS/fxfd0OoWg0NLWxa9sGAlX12FWF9rZmCkWDfL5Ac0szaA5Cfi8trU0AuLx+dr/+
      FbyiQLFQIBqdp2QYRCaHGZuZx+7QSWSKKKqN2rCPQiFPoVCgUMjj8IZwaSCEhsMmqG1oQnd5
      6eloQXP4CXjtGKakpbUVI59iLhIhmsje2u4bR4DLJw7i7dhOeuwKur+W/NwAVet2cPnkQYSi
      0tC1jXOH36Oqph6bv5Z6v8rw+DTCEcCXm6Nyx14q7PDpvn0kM1n2bG9nIOunFB/nhZ3PceDg
      AZRiFrsnwMjYFJUBF/Vdz3Ph8PtU1dXiCjeh5SIksgW8FY3kI8PkFQc1AQfjsRzNza20N9U+
      0Be0Gnz24Yc0vvIFTvzix1RU1qB5Kxk5sQ9P+y4agpL5ZBaHr5KglmNyPkdNVZj9n+znhT2v
      48jOU71hC6cO7EfVNVq6t3D+6KeEKvw4wm1s62nm5OGPad70ErnBo8y725gb6ceSCnu2tfCL
      o31s6OkkNjEAuod1rTWcvTCAomps7ajh4LlRdCPPxh3ref/dj9jz2ht4lDxjUxHsvhp8JJlM
      5MkWTLa0VdI7Oodic/Pyrm0kp3u5OKPyfHeQ/UeuYpNZLNOg87lXOXfgHfz1PezavvGhP9/J
      iUnq6use+nWuIYQQ2k0fYFrQvX4D7318hMawRiEzg8PfwvPb6/nkwHmCVbXsfmkv+/cdYN50
      IlGYHB3FV+m64UQqL25t59OTV6lb/zy5XA6AbDaL2+Hgued3EY29z3M7erg8HCdUVc+Le17i
      k08+YX5qktqWdiYmxrAbBi+/sYvs3DiT0WFS6fQjezh3wxus5Plde/j04AFa21tp2LGNI7/8
      AVW1LUyNT5Byqbz6yisIYGp6ks3d7Zw/NEEpPoZa1cPL3T4+OdmHN1jN7hc2cODYENAMZoFT
      J08QDlXgS4ySR0VLTzOTqCFY10pHfZhDkWn27nqOi4d+iaH5yMemSaQDtHZuxBUbQfFW0NXV
      RXd7E+dOHkUogvGRMXxuyauvvsb+A59y9WIvWqiKqekJYBsAfZfOQa6O5zc18qMPjtPdHGCk
      fxTsnlXr/PH5aXKxPrAssCRYEmFJsAALhCWZmr6MtLj+T4K05OLvlnXD3xa4mxuo6+554DYt
      EYDOzdvYt/8gU14P3kAIm72Iy1NNLn6QgwfGaOzcytC5gxw+eIBwXRPJyCCaw4fL5UJ3OFEW
      9ACH00mgvgv9yCEURUO3ihw/fhxT2HE4nQA4XS6EomG3KcSyMQ59eoCK+g7CXiepArS1tZKO
      TKMogqIpcdg1ErH4A9/oamB3ulAFOB0L9+B0YLNAVaBrXQdz6SJtba04zASHDx+lub0TTRqc
      uzKA3eFEDzRinN3HpzEbbd2bmBkdAyFwOm3l87sDPNe5g5DHRi4+w9jpK3hqWwi57cSlC8Xm
      xFbKcPTYSdraupi+MkKgoRmvy0FRquh2O6qiYhXTXBkYJZlMYvf6cbkUKn2Cg4ePMhNNsmdL
      BwOTMdra2gFQVJ2NW3ewvacJaRVprw6A4qK1tYZRa/6+n4+UksvnT1HTuoGgW+fC2TM0dXQz
      3HeFdeu3kE9P4Uv9AyKbR8mVEFkDkTMROYnIWph5iZGVmAUw8hZGHkoFKOUlRsGimJcU85JS
      3qKUlxSzEt8f/hqVzXWcOnuJippGYjOjtHZvJeBSOHfuEnUNNQz0D9GxcRuVftctbb7rJHiN
      Z4exwauMz0QpCQd7d21/KNcwczP0TgrMQpSOGgcjuSDTvcdp79pCMpsnaJvHO/9Xqy4A2//t
      vyI+Pcp83qT3yiAvf+FVsjP9FJ0VZJJZHOQINbTjsS81U6y5QnyOaGzrYvfuFx9a5wcQmpPp
      4UsgNHKmxnjfeVzeEAN9V7AtjJoPi6n5NA1VYSor3PT19mIIjf7Ll7A77aSL4pbOv9jmtRFg
      jVVDSkqGgaqWO5tpGmiajlEqoek6UyNn0SJ/C/kCSt5A5A1E3kLkJSIvMfMWZkFiFcEolEeC
      UgHMosQoSkoFSalYHg1KBUkpLwn85tfY8Ye/h2VZCCEolUpomgYIDMNA1zWkBEW51U4nhBBL
      BCBVKGBYD2p+e/pRhMDvcNxxezGb4MSpC+guHzu3b7qvVcTI7CxVlZWr18inmFKpSKlYWNVz
      qpqG3f5go8stVqBf/Zu/49Ph4dVo11NJtcfDyL//n+64/ciR47zwyus4NIVCep6TZ68QqKil
      OaySs9dhxIZxBiu4eOoiUhX0rO/k7Z+8zQu7X8Hv0sllkxiWRmtnF+mpYdz17Xj1O60gPHvo
      ug1dtz3uZixh2XMAYRTxzUxjz+bLH1gmYnHUsLBlc2CWcM/NoZgPWbuSFu65GdyJ1MLfEsUw
      FjfbshkwS3gjEWz5m948loliWuV97pOiBXa1/MiOHT/DC7t3k48MMT0zwVzGYGZ8mGQmibCF
      6az3EUkKOru62LKhk+Hei3iqW1jX4OPE6ctc6B/Go31+Ov+TinbvXZYiNRsSQUkX+GamkdJA
      F07yqgG6Ha1goGUMisFK1EIGXyJD0a4idTt6KonhdqNnCyRrqpBihR1AKBgq4HTjjUxjqRru
      ZJpEOIC9YIA0KalupM2JKxbFroBpd6Pl01hCYDd1pJGm6A0iCln0pra7Xq4+5OJC/whhtx23
      U2VsaoZEzqDOYWdoLkJsaoZQWyeqqiIorxibhTzxZArd6ae6wo8NP0bkEPa6Taz09tdYOcsW
      gGuopQKqYWBqKhILdzyO5fRQ0u0YdhuuaBTMIs5kFhl0o6czaLkcabsDV3yebGUlpdV6A0oD
      vWBg2gSGpuJKxLAXIest230dyTglux1nYo68X+BKJsl5A0ghMBwulFIePZvCkbu7frp+x4tM
      T4xiCJXtu15mdGiQnS/txeuyURgaZN0rXybg9xH2Wtg1iRedlvDzzMTTbNm+bfFhe30hOno6
      V+fe11gRSybBb/zFX93fHGC1DEer8QqUEhDAyttU7fXedQ6wGuTTcaZjeZoba+7oP7TGo+GW
      SfBvrmvnJf+tnp6Pi97eXjo7H92b0nMXC9Bq4fAEaPE89MuscZ8sEYBtwQBtt7GXPi6u/vOP
      +cLLex7Z9XRdf2TXWuPJ4IHnAJ83pJSMJ7MYcnkvCJnPYjezCFVBFguULIFNkfidgmxR4rED
      lP2dBIIUTkCgFLIE7Q+u1mVMFRULh1o+R85SiDmqEKs48xZAo9e+uPD1NLImAPeJlJIfjhWY
      Me7/y5amQdepv2R7cJ4fmq/RNfUhfr1EvQ9mHRpHx1S+3l3C5wDVgpGMk+87v8W3pv6JBi2D
      8sAmc8mxSZ291QZSSIoW/KnyBsnOvasqAA4h+Q/r9TUBWOMOpKKES9N0BizaI4NcqX6Npnw/
      J5JOarJJXq0bw+8QSAnjMcnPbHvYOneM9c7MCu0DgpeqSuiK4ExM51Olh9SOPcvv/BIEEocq
      yZkKz+KsfU0AHhLOoWPkpY4QAkWofNl7hdTAHN2+KH7FzdfacthUgZSCvCHZPxNkbvsm1s+d
      JuMEzwqnI05N0BeHSzGF2M5doCzzLb1g6ftWRRELUJCczWj05TXsQmJYPBMCcU8BMAyDwcFB
      TNOkoqKC+fl5XC4XqqqSz+dpaWlBURRGRkYolUq0tbUxNTVFbW0tuVyOqakpmpub0TSNwcFB
      isUijY2NRCIRPB4PdrudSCRCU1MTdrt9WY2XUjI1NYUQgtraWgzDYHh4mOrqamKxGNlslurq
      ahKJBA6Hg5qaGizLYmRkhEAgQDAYZHx8nKqqKqLRKDbb6i3TZxUPusdDVRYMCypcCh2eBOmi
      yrbKLCdGBc81QiIveX/YzWzbXoTTy4Hu36Xj6p/g0Vdu1tUUSba6k2K48b77qle12OY2OJrQ
      edlvcD6jsdNj0OaSnM+Uz1KQAgToq2B6ftzc0xVC0zQ6OjoQQlBRUUFFRQU2mw1FUYjH4xSL
      RaSUzM/PY1kWhUKBSCSClJJz586Ry+UoFAoIIWhra0NVVRRFIRgMMjs7ixACTdNIpVLLbnw8
      Hmd4eJhkMomUkrGxMYLBIP39/TQ2Ni62c25ujsnJSQAikQher5epqSkikQjT09Mkk0lSqRSF
      wsoctURqjk1Xv4dMzUPTekqBOvYrz/Ofj+nMpmFXfYnJooeQ0+L5JsmnAyZ/cUKjd+NvkWrY
      DvkMvulLVDlWp2N5dIXh+t3LOiZnCtodFm+ESrQ7TaZLgvfjOu/M6fTmnz3v+fu6o7GxMRoa
      GoByB6qqqsLv9xMKhUilUmSzWTo7O7EsC03T8PnKawkej4fm5mbm5ubIZrPEYjF8Ph9SSmZn
      Z1m/fj3RaJRAIEBFxa1R+/dCCEF9fT2WZZHJZKirqyORSACQz+cRQmBZFtXV1WiathiaaZrm
      otDmcjni8TimaWLc4Ee0HNTYJBhFLJuLubkEr/T9GepMP67pyyR8rXxrfYGgS/D3pzS8ZHj7
      gkrBEIScgp5aDXQH2uwIb/X+Bf+D8bMVqz/XOJ4NIo0iy1kkNKQgZwlaHCWqbBbfqSiSMAVn
      sxryWdB5buK+BCAQCOB2u7Esi6amckT//Pw8QgiklJimSTweJxAIkMvlKBaLTE1N0d7eTjQa
      xev1ks/n0XWd6upqoKy+jI6Oous6kUiEZDK57Mb7/X5sNhuVlZWLo4llWaxfvx4pJY2NjQQC
      AaSU1NTUMDMzQ0VFBYVCgaamJrq7u9mxYwfNzc2Ew+FFwb1vpETODNEx+BOcM1dAd1DUvfjs
      kubZE3w58VM8pTgfJtv43hkVw+bGSZFvb7bw2GFLo8Kc6UGPT/HfRf6S3c45tFV8yfaHtyFq
      21lu3NNnaZV/itiZK5n845yNFpt574OeUu5rEnytY6iqitvtBqC+vv62+9z8e2tr6y3nc7vd
      dHV1Lb+1N3FN9wcWR5B169bdst81ob3d3y5X2V+oqqpqWQthUkrIpQiNHiOkJLjsrkHkUsxt
      +RbvXDpErTPPIWMDMjbNQNc3oc2gcvIY4zN9XJyK8lwzHJpyM9X2OjJQw+GZGt5QpzCkwLUK
      pol0CXKTfUhfK6K6+f4PFNCXU9nhSmNHIW0KvuA3iBoK8+azpwKtWYEeAGkUqRv7lFy+RLpp
      B5MpF3hDMDuKyCVh86vMKCpk4oRHDpLMpgjOnMVpxqnVY2SK8O4lyVjT8xh13VAqcETppHeo
      yAuVBi/6lz8a3oxLg1c80/wiM4/FMgQAQAjCNjuXcgJDCt6L2bCeQfUH1lIjLh8paRjdz5vG
      J3itNIVMlqH2r6FNXEJWt0CgGplJYE32Y7/8CT3qBGoxQ9ZQeV7t5dU2SVPQ4vkmKMTLaiS6
      nZBb4/VQnN2+xKo0cyoLk45GwoXIAx3/UULnSq5s+89JpWz5eQZZGwGWiW3sLNtSR/hJop6s
      WqSJPibiVfTMHeB81TrcVz4mm8yw2zvOKf9ehlM2diTf5kzEzjuNL+GYypC0V9I+fYFE43qg
      rMpF173MwGeXyczOMqeHqdbzbHclHnhO4FJhsuBiyh54oC/ZRDBWfHpXeO+XJc+mpqaGYDD4
      uNpyC9/+9rdpaWl5ZNe7nyX9vL+Bn+feQGQnqYxe5DstJj+YFIhClm2n/iOfVb5JZeSnhKos
      RGKGKXcjlrOG9aKXM8Em3CLJ88VeLokOTN91l2ihapzc8vvIYgHhCUCpyLkrP+X37GfQH8BB
      0aFKXpWX+X7Nq8s+9vPELQLwJNHcvEzd9RGg+CuwfGFkYhbfwBx/fznDc5XnsFW6GDcqsFl5
      ol/87xm69F8oWQrfsR/iZL6VLzfEeN38PhKB2wvh6VF+YX95ybmF3YWwLyRvstkZa9rD5Ohl
      mp3FZbfTocG5uI44vw+559cQy10J/pywpgItA5lLUz3+GSWHn6i/g6tb/5C2/re5YHczVPcK
      KBqoGkIILmz8l8hklLfna8jXtPDnczVUWxFMoZFXXGS8YdDu/vjNQA3vzTzHH3No2W21JFTq
      JUTHzuW7QXyOWBOA5VDM8StyPxWKZGpC4eeutxjq+lZ5m1FEj41jecKYpSKVV98nH2yiLjdA
      e+IcH7r3MuFswjJMSoq9vBg3P40I1d41Mm7ScCF1uSxHtnRRMl+wGHY0IWtan1H7zeqwJgDL
      QMvFCbstnLog6BS0jn1EpiDJVHWjJGbYMvbPXGp4k3yuxAt6Lx9OS3ZWTaCrKigav539IX99
      McDvd89xJaLQGlb4O+v3kZV3VvXMrl1cPrOf9f7SfbWxaEr+aUBhTguTeuGNZS+Cfd5YezrL
      oKYwikODeF5h34SXL7fn+Fr+PXZd+XNaen/CtqocWWclLanzdFbABn2Cc/Me/t75beqMCSRQ
      77eo8sJo2saH415a5k4gzTu7YEijxHTaYDnuDNVugVbMYvirVn7TzzhrArAMMnqQRF7hYLIJ
      y+ElloX1NRZvtaV5vq6EqihUZMcY3PibnIoHmFdCxEs6pYoWPOQIOS30QhJFKOxpKLDFF2Wn
      dR7j5PvI/J3zE9lUuBK7P0Xm3BzsqDBoqfHA2tv/nqw9oWUQr9vOn1m/xonm7zDg7GY6pZLI
      CUCwvqJIrdcikJ8CRWV/428zHt7Gr7fP4py5wiWrmaNTTn51k4GmWHRWS3a1KdR6JbtyR3Ac
      +QfI3Cb9u93Fe8E3+CgRxrhbsasFDEvww2gdjeY0Iv5gi2A3I3MpzNMfYR17F2XwLPIZSp+5
      JgDLwIpOka/pArubXN1GPouH+OVUBeNxCcICAV91nqbuwj8hFQ1FgE2D9vnjyNp1DFi1fDap
      c3JMcGpc8G6vg6BL8MVujQ0MEjzyN8jSrS7Z1fkJKmSS6XskscsZkqGkpMIh+aW1AelcWd01
      aZQonvoYPvgbNo98xHORg2y+8AOU4XNI69lwkFsTgGVQP7afl6/8J54b/gEil6aq0s2L4SgN
      AYkl4dy0IJ61mJ2Jo80N0T7+Id/rq6KyNEWp9xSjm77LkNrMQEzjR8U9HMqv47OIA6du8fI6
      FeIRiE7ecl3F5WPU24FxjwHAqQm+2wkveeOYnS8gXA8uADKfwTrxC4IXf8mvOEb4F/UFWlwl
      pDTZNfEj9M9+BonVGWEeJ2tWoGXwK21x1PwcMM/uzEV6Cw5+FmugJplnPO2gwppl0LWN4rpm
      tFQUv82gV2nkNxpmiF3ex9CIwEOe9fUWl4I9WLk0P+/N4BIjrK+WNIQUZosFVHnd7CmEYLL7
      y7jO/IKKu6QtmkxLVEVwVmnmWM1rFCrbH/g+pVHC2PcPeOb62RkyiRfhzLxgY1BiOCVbmwu8
      ahwiEzsL/B8PfJ0ngTUBeCAsQm5otkoMmyZSd5Cem+VXNqTZLs5whjwKcdxaiS/aL+HQFN5a
      L/nzoRF2Vk5iKRqKwwnS4oXwPD9JbmJd+Dzf3Azqhe9zNv0GVveLCKU8QCvRCVonDyPagNsU
      YzUsybv6TsbqX8AM1Kw484NMx1F0ne1Bgz11EiQMJMClg56VGKbApoKuPf1zgTUBWAYSyFsK
      RUvFoZjUeg2+6x0BBBctSa4EXdVF1nEOgpAvgWmZIFQcmuBbVQOk8hYRywmVGoTrOOL+VzTO
      n0IRkC7AC00SMfIeZ4wicvNrAGhWkS81W7huU4TZtCSXs26Ge76EcLjKSSKlhHwGHO5yq7Np
      cHnvXzDScZ7LX2Z7hcSmlFeVr1V4lYqgYMKRGTdba2B5UdxPHmsCsAxKC52/IFVMU2BTrvvo
      bKgTlBbTwZc7mkMHsfD7qfFyob+/v+qHra+juQNQKiAtybbMMTS3ZGhO8sNIB89p/RSdQa6F
      55R0NyY63FAnXUoYyup8nK1nrPtNhOOGAnCFHI63/xRR0Uh9coaa2DTHv/JHlOpvDRa6BSnx
      DxzGr5aockokkqtpG+NagA1yFpsl0RSB223nP9m/w/+yguf5JLCiSbC0DArFB4ujfRqxKSa6
      sHApBn7tWue//lbV1Wu/y8WfEglIeqotTqcq+FpzlI2yD2mZ1IwfZu+VP8UvsuV9ahXqPQYn
      Q6+jtW+5fuFgDf+U62LohlCBuTz8dehbDO36A8zQ0ug8NJ18VTNvDH/Ga/MTdEkDZ3Tivu7R
      nJtgS6Gfenf5HkwL3qt+i4s1L1GwQFPKd1ehpBGT/ff55J5clgjA/OgFfvSzD/lk34eMRu4c
      mDE3NkosV6SYmOD0paVWi7H+ixw4eJizl/ruuxF9/dcf5MXjn/LhgUP88hfvkbpLtfTI+AD7
      D3zKiTMX7+vcU1NT992e/v5+bndlCThVA7da4t4eyteFIJ4zeWe6ieHANjRdpTg3g2PgKNOm
      jwN13+EfCnsYnZeMzkveDA1jCWVR/wdACOL+FmpueMnHCgLTE16637XdNR3ZtZPRYB0jNifv
      7HiL5PqX7nnfVnwW/+mf4ZY5fLayKjVUcFKQKr+eeB+nCmGbZC4NDZ4SX3AuryL9k8gSFcgs
      5mnp3sL2tgAffvwpRkMlk9EEgcoGqtwwODqJ7gmRHjhHylfL811VDFzpJxO5ytYX9xL22Lky
      OMkXv/QGAhi6ep6JuRQOTxC3zaClfT3nzpxkQ1OQTy5GsJsZujZuYt++/ZjCRnd7E/miweYd
      L2KNn6FvdILE+AAoNl7YWMu+s5N0tLfS2VzL+SsDvPr6l1AFTI300jc2i2pz0+CUDGeK5JM5
      tm9dx779+0Bzko3N4dfy7Ds7it3MsnPv61w8foiSBdt2v8DB936JL+Choa2Hffv2E0vl2b5t
      45Ipp7juvQ+AIRUUJDlLxSYsyir6rbbKs3MerrR8DdNXzU/m6vHOXCRfvxmm+pE2F/mGzbw7
      nmKbuMqJaAC16dbg/GzTNvquHGSLnkFKyQHRhQjd2X1daejgzDf/HRgGwn7dfCSlRGZTKO6l
      1zBnxwkc+h6/Wx1hKiOpdgouph38Y/sfsPfK92n0lzNq+G0wlpA0BOA5f/TOPesp4fYqkBAg
      JefPnUdTNXr7rpJJp7CEQv/gAI1NbWzduRO/y0F790Y2tNQQTWaBG79+yejULC+9+CKZ2BTp
      VBJLSmLxGGY+TUPHJjrrvRj2MJ0Llc0BMIucPnGCwYSONz5MylLJRkcYn0lgC9TR0Vy3eJ1r
      3bF3aIqXXnoRLZMgmszRs30HlTYVZ1UDnV1ddLTUk0wkMAoZ6trWs6E5wORwP1em0ggrS//A
      BL5QDTu2dhON5+jq6rql8y+9t7IOXrAUooYdTUh0ZaHc+U0CMJMWfFz961i+aoQQiIp6si3P
      ocQnaTZG+G/zf8EfJP6C2drneL/pD5mv2owI3tqxhcPFe96XKZoSU0LWV3fPL1eo2pLOf+0u
      zJmRmz6SOI7+mK8H56iwy8X430F7E1Z1K5rLvbjraFYhGNJXoxzDE8ESARCKQt/F0xz85ABt
      67fQ2taCJaG7q5vJqSlUVcOm6/jCHs6fOEEiV/Z/EUJBWbAwtNQGOfDpIc5e6ifkdXDo8GGk
      7iXkdnD8+HHGp+dBUVGEQFn4WUrHuDIwVm6Qzcn2557nxee3U9fWigOLioZ1VHptBPy+ha9G
      0NVct6gC1VV4OXjoMAlUXKqKIkBZiO7KJ6L0DU+UyxYpKooiEIqKLVBLQ8CO3VNBS2NFebsQ
      KIrApZp8duoCt651yht+SlQsgmoBu3Lzntd7x6liG1S3Lro8C6EgPWGs2g7yUqPCZdLiK/Jr
      83+LGZ3CWvccGLfx/BSCZMvz/In2Vd6Z8TEfejA7vxAKetsmAEq9p5CWVW5tqYCgvKB3LQwz
      RAZr+BKD0QLTBY2PstWctzzY7fqys2Q/qazVCb5PLMsidfR/R83fulIrEAuT3et/X+MH89u5
      0vart+jqMpOkZfYwv+v9FEVALCP5j9Zv4VQMmuZP0bf59+8YJ2ClYgiXF6E+oBFPSqx0DJmK
      odaVBUl8/Hf8e99pDkVtVNkMNgQloxnBX9X8FpbDQ+PFj9EErK+YYVs4jU2VSNWJ/fX/86mt
      q7BWKX6ZiDuElsi76ANvus7gmTh96wa7E0OxYS7Mtp02wTeyP+brhZ+xwzaAOXr5judUvMEH
      7vzSKFI8/A6hff8VxXm9VI26eS/v0cP+DX+AWChl+gPHK8hQLXJmFK2YozlylU5PCpv67Lwz
      1wRgWdz7i79ZSAIOi5fTH7Jz4G9Qs7HFz635aUZEPSNxFZA4dMm26hw9oQydVZLA5Gc8lMFZ
      CKzpYb6oTOKZG1r82Kho4mTVy6in93PZ1UFJLqSXlJKN/UepSCVwFy1yxRtLxNmkSGwAACAA
      SURBVD39atDaQtgyeNDu+Hx1HIjTOTvO+2Ivs85mEALPXC81NbfzqpS85Brg3ZFLKM09qxrV
      JbNpRKiWofkZfLkYNzqY2lPzeOYmGDB8/Gnrq5g7X0cWC1BI0ybyTPg1nKZCMW7R8uQkD1kR
      ayPAihFL3vpy4T9TCm5231/nTfGv3T/nrej3UTSN73qP4rlNGSQh4LmGIr9T+B5K77FVGwlk
      PkPr4b9lfbKX04H17J48tOh9KksF8qqGQynhRSIFvHn1/2HXhf+X2iaTObvCxu06m5pVUqaK
      YT79b39YGwFWTLnzl6fB15BYlKSCIQUedelKuRASHyms2QlS0g7kF4659v+FMwrJugrJW5O/
      4GfGdtBX7nUjjRK1+RmMUD05s0izlWf9+Z9wcdfvEnz/r9iSHqPbaWIzJpmIR9jcLiAEpiU4
      H9Kp8pc7faIgmUlBffjpf38+/XfwCJlLiyV60LXOf31V4powKNiFiXUHU2FXpcGu0hH8trK5
      85q7BIt/lX8fSjq4kvBBIbc6N2CZXG7Zy/HN30HLJZksKCiZBO7TH1IVG6VDM3AoEguYiksM
      67pwT0clfeMmpwdN/DZBtKAQz69Osx4nayPAMvjwMnR7BT211x0lxKLTxI1Lc+UurMgSaUPi
      dpS7kWlJFKWs4rxZM1Feb7zh/OmC4J9nOknFUyjhWubDG6kp/RQ5NQDrtq/YzVnxhUls+TIk
      o4y37uZ7qQTVuSRfOLefEbtKVoIbuFQQrMdg3xFJXZuKrsHmekGtX8BCdRgk9M0Lnvaw+zUB
      WAa55h0cOjyBY95AFzd2XXHDb0s7aU5KcCvM6T4+s+/kTdtxNlXmbjHxZ4uwf8RNrTLMeONb
      FGp78A4e4o2mOCfH3uFsuP6urg/LQfGFcZ/8kO6JK/Rk59GAUN7kkqHh9IJiSi6NmSSDCq6I
      RVwK2poko1Go9kJrZTlp7rqqp38e8MQLgDSLHD92nKbOTdRW+Bc/TybjOBxOFAHabfTj2HyM
      YGh1TRVmXQ/dnrfpdluo4rr9f2mnFzf9tBjPw8VSmEpzjgPzNTR5h/HZ5RIhGJsHezzOpm6N
      41OjyGSSdMMG/jJVh/DNIKzV9bpN7voKyfcjaNl5QJJAYCkKb8eh0jJxSEFDnUJzSCFuQbvH
      IqnBgSEYyAVo92SZ0Gv4wqq26tHzxAtAZPAy7rou1OwsH3xwAp/LxVwsSUlmaGrqwp2eZjAt
      qQy7uXBlis72KtLZEjOjI3zlm9+hIuC+90XuEwl0eiWKkGVb+EIHvm6lEQhxbYNEoCBRaHBY
      fFf28na8Ct2APx/dxrdrL9PiyTE6B8mkiZWVNGqSfWNBKlMXmAttpOgNoVY2rlr7b0S4fPT3
      7OKFSD8a4Ecyq0m+5Zcc8bZzOTKHV8lyctiitb4cAea1C1KuSs5u+tcMHvv/mPW3rAnAw8Zf
      Xcupw2dIex0YpQKplKC+MkBWrwRpkk9nqatqZHo+QlVVJYaw4XfbsDfVrf46TS5FQCvb7YVY
      cH+QLJaKuhmJXJhCKoBF0lXFV6zLfJB2MJ8w2NdXyW5lhg2uEhfVIP/Y8RvYlRIlVxjDu7pV
      3a8RGDhCU2KArO6CiXGSEuLuIDFXgL7OHUzNXGVreowLu3+VxMRPUPU0Y1MWJcqTl/H2LyHs
      LiZ2/xFO29PpAnEjT7wAOHxVfOXNN+6yx5Yb/v+Q0WzcqIgIxKKQlYWgvEp6Y79dVJOEwgZr
      hoAOgWyC1LTgtz3jaELSn1Y5ZAawqlvJL7g4PCztWpkepzl6hu01EiMAAx12job3kN/yRazZ
      cVKqHWfUzkuX3+fTTd+h0vwIT3yUUBEieYHhT+EePcXm5EmmPR2w/qsPqaWPhocqAKZp3lfO
      /acFYXeSMVXCmnVLD71RDbrh0yX77LTPA/DVYAqJBVJwMKrzafvXKXXuQqzgWUlpgWmCUO54
      HiklFak4lrguqL+s/wo5d105uW8yisfKc+ml3yZw5SDh3sOYgUpqRkb4ecWLVBfO8830L9hk
      K6E4BZaYBJ5uAVhbB1gODjcfuHeQNa+rPDerPtff/jcLgqQcL2CVOz8QLQo+NBoode1eUedf
      vJ6iYkUnsdK3yTC3QF4KdE0gEUyXHCQCTVDdDELBqG4i3rwJdfwq+flZopteJ7ruVfqFg2Jy
      HsvhY0OwhACKBljWmhVosUyqqijIhUAaIcQS/fXnB89xdez6lxLy2vidt55HuU0435PO5Kav
      cfXMGNvkxD1cFMqd/toK7zVL0Y2WI0VICNXdNqxxuQghQAjUqsY7Zm0TQjC299vkJo5x2kiT
      0j284dhPs70AUtI7nQTp4OOmP8JyBxDhWgQQ/fq/RR04x7TLx//t81ARO09d5iK6w8EXV9zy
      x8uKBaCQTdLfN4imqFiBCtIT/XRv3o3PfX2CdHU8zv7z1/3oWypd/M5KL/y4cLh4t/mbjPS/
      zxdkPz59Yf1X3Fn1uZFrgpA2BP/s34vS/aVbd7p5IrFMbqwGI6VVDotccHHWjSR7w1foDic5
      P2Syucqx0CaFiGqQNUxIRJAVjYspVqRuR9v0Mug6SaFQ0O3YIkmIzj9wG58UViwAiqLiq6jG
      g0XEyKDo5Vw0pmkuVmTnNm9K0zSxnoIkq0KIW+YxVk0b58L/DeKzP6GQlmyyJzEt0GyCDowl
      he2uOUpIyrl1NFHOs/PXoa8w3/P6LZYeaVlgmQhtlSwsNzx6WSry1eKP6alMMzwjkVJFoC4K
      ZV2tjQsXEvyx/+/oHQlx0P9V9HyC39Te5ePZBiLBTeRdVbgKUfqNdWwsHFidNj5GVj4C5HOk
      EnFc1bVUK3aqQjU4bOpip1FV9bZvM1VVn0oVCBYsPkIwXvcyxbkZXmu5SMhT7tgXTuXRDEmP
      amBJweFSFSW7h4l4jtmOvYSzM2yMnyfhrLjtcxGKAqv5XKQEVUNmU2hGFruZ4cKQgd9nY1u3
      bcmuYb+G261QGxDU+OfZlv874rqNBr/FzswQ7Q0RckUQHriQyGN5n34Dx4oFwBusZEOwcjXa
      8nSh2YiGt9AZ+S+8E93GbzhO4dAFm3Y4sCRcPpnjuNXB2Iu/t6h+AGQBcV7SNX+BC/4aRLD6
      odj7ryGTc5BL44wNsqF0mhFZ4rWdblT19td0O8udWgiBzwm+hQJ9plleufa7y8I5nPaxsc11
      23M8TTydr+AnACEEwhOgr/O3SMVT/GRmE5Ys16TQVEF1t4NURcOSzn+N0bZXmBR+zKHzWNPD
      D7WdSrAaEazi69UX8Gp5Gqo0Dp/PMhe/vWuFYUrM+6hDsLMdPi6+sNrNfeSsCcAKkb4K0lWb
      6fPs5ONox+J0J+gVty9RZBQxpwZJOEOIYA1WfBYzOvlwwh8pT2LXx/bhsxXpaLTR02LH61Ip
      lKBvrIB1U2d3+XRODlucGzG4OmVimNcjFUoGlAxJyZA0h4q45D0KFjwFPPErwU86QihYLeV1
      6KMRwY5sHyE3KELgkenFkMPgxFGc6QnGq/YgiwXsLhvuqx+itG1hPhFFqjoi8BBUyWIe+/Rl
      Jn1FdnSXcwQ5bILaSo1CUeXycJG2eh27LugbK+LzqLRvdXBxME9djc7VyQIOaWKZFldHC2g3
      pH/cVDwMvLb6bX6EPBECUCqVbrEI2Wy2h6obPwxksJYTM+3s0fpx2QRftB3hRzNVaMUULxsf
      cFKuL6skgUqy2RSSsjcrA2dpn/gpI7VvUNS9KIFKhC+0Ovdvs+Ovq2Jn4/UsbqYpMU2J067Q
      3WrnxMUcuibY2G7HZltI7GtTUFXoaXeSzUsmr+Z4qdOxpE1F81b17mnjjgJglNKMjSVRVJPm
      5ofjkXiNtz85z0+PXs9Q4Hfp/Mm/+TJ2e9nNOZ3JcvDc8JJjNrfXUFcVeqjtWi5Ct3Os9jc5
      OzfAhugxNjuH+brxI3RR5ORAiZmaIMr8BGagFsXtLy8cajbUqmYGS0WwOVCKBVBUzLGraI1d
      D7QeYCXmQEqUQCVIGJsuMOEsEvYrFIrlxTjDtNAWjDiN1Tp2m8B2Q3/OFSyc9vIHTjuEA9qS
      zi+RzMZNVlaE6fFzRwGYnRrl5Mk+erY+fDezQskikb2eDe3m7zydzfOff3puyWf/46/bnzgB
      gHI6wkJ1F6fo4rNsEhDUDP6C7orz1Ml9mBP7+TT+Nay25xCua/k5HeBcON5Rdt+W6RhSWgix
      fFOjcHrK2RwAkU/R5osTz5gMTpZoqtHwegT5kkn/eIH5pEVlQMVhCDxuDQHEUxK/R0EuuG30
      T5Sor9QWXTjK3d9ics6gbUVP6/Fzx0lwbVMbmlUA+eQvVj2pCJcP4fIyveHb7O/+nzlk/yLN
      jQ6Ey7dYaVGaJmpkEHl+P3J6EFkqInMZUPXbp0i8n+vaHCiecvCQtLv54IxC70gJRZFkchZB
      n8LQRIm6SpWQT2FkukTAqzA+YzIwXiKWNrg4lEdiApJ01sTlkkhMJCZz8RKXBou4HU+/DeUu
      cwAFr8dJJvsMRD4/ZoQQ4HCT79jLT47PEBRnmJM6QtNoTZ2lJXqEnMtLp/MYk3Ne8rkCF2c8
      zD/3eyu/tqphvfYHaNEfE3JHKBQtLg4WsCzB1eESo9MGPW06HicEvCqg0jdaWshyIRmbNhAC
      9p/ME/AqqAqoCkRiJnu2PRFTyBVxlztQae3sZGB0+tG15hlHCEHihe9A30mc4+dxyzS/UneB
      bAimrDx1ARuNoRgIqHOmOHHlBwx2fxehrWyyqQQquWh9CfvU9zFyRV5/wUU6a5HJSaIJk3TW
      ouw+JBmdNigZFtUhhXN9BarDKps6dK6OlKjwq1QEVISAI+fyq7pg/bi4iwBILp0+Qahz56Nr
      zQMyNjXHJ2eHl3z2lRc6CQdvzbP/RLBuB1l2ICfO47VfIOCAOoocPlqkZ4sL04JIpMSL3ivU
      nfrfmC/6GW/8AsmmrQ9sGSqGWjlm+2N6pt7mk94MGTzYVJPhuvWcsjUwNvAZ9YWrtFVDV7PG
      lWGD7laN/jEDo6wJca6vQEudTmO1RkOVxmeXi7zaubqP5lFzFwEoYfNUk4vNAt2PrEEPQiSW
      5h8PLC3X8/KmpidXABbcxsOFCYT9usN02CPJ5CSDvXl2hEpcTWvoZoFQYZqqwX/kE38dBKof
      +LLSE+Zi+++XXdZVDXnNdR24atZzJRllcvhHbEzNkUhbvH84z4Z2HY9LUB3W6GrRyOQkR84V
      cNoF3S3PrCuEZGoqTk9PM+HKikfbomcQK5PAii8tKu2bPsv24mEuToMpYSohyadNYkNZ1vsN
      vA5BjWKyKWTxWofkuSYD9eyHyGxqRavGQlEXM0svGU2EQDg9kImjIlEVaK5VqQqr+NwKqlKO
      8UhnJT3tduxODcfTXiKSO44Akv5LFwjV1BCPr1JWss8xQrdjZVNLPmtMfMa6BsnQmMKFCQtV
      AZ9d0B6+bnVrWMwCI7Br8MfV54j3X+KIto2Byl0IT6DcaVenlSAUutscFLJF3E6BpgkctqUq
      18CYwUzSpKlGY3jKYGvPKl3+MXEHAVDY/fJeYokUnV3PSBrgx4iwOVArGxb/lpbFXMxgoGiw
      qQZSecnJQcmuhhuzyy1FU6DSLal0l2gyTlBMnGAm6uGnnq+SqFoPmm1FkWVCUcDu5F3tW2xN
      /C0hl0FP3W1iEgS8tFGjOqRiyKd/JfiOKpCqS04ePkrf0NhdTyAtk7noPIVMklSuSHw+Sslc
      Wzu4K0IQqAyzsRoUIRmblXyxTeK1398E165JfHbocKf5N6V/oGX043t2/vtVm4xQM6O2Hrxu
      hclZg+FJg8j89RDLiqCKz6OAkIsryU8zd3xql8+ex1Agm727ClQqFkil02TnY4zPRujtvUQu
      byxGfJmmeduIsGvbFqPG7rL9dpFj12KRTdPEut3xN2xf6b/VRgjB1ZZ/wblEeXQ1JUTS5Xua
      ScPd3h/ipnTsqgKG7rz3Re8QJ3w7kqEe2hs1Al4Fp10wPXf92ELB4vJAgf4xA+sZWCS9gwAI
      fD6VmakE6fTdXV4VVSWXSVM0BaKURHMGywHfirJQdE7hdsP6tW3KtWyxd9mu3G47LG6/nWlw
      yfEr/PcwEJqNY/bdmJZgQ4NguqhwaEIhpqhMpu5wzE3PUUp4L7+RiYaX7329ZZRUyrtriaWg
      KqRSHVZxOgQHT+cZmiiBlGzr1Lk8VOTiwNNfJP2O325D2ybqK9y4PXdPLSgti1AohKeyktaG
      djau78Lt1BYzQ5SzFdx63I3bbzfwLz3+tie4+/E3X2MF/x4WkfrdXEgE0FXBpnqBzyvorFWw
      3Bpn5wSFe/Svq0kHnzV9Ax60WN4daEqfosJ//b7zBUlLjUqVXyl7hs6aKEKh5tmuD2AiTZNo
      7M4V4wF0u5Oamhrcbid2ux2brqPcu4z6GoDQdD4Of4vTsSCWJTBl2c2ssUJQX6NyZlpgWuIW
      tecacenGcizfCiTvoHZCeU63zry0ZJVXVQQNVSouh8DrVLg8bFBfqTARefpHgLu8OjQ0h5uG
      urV1gIdJOtzBO75/x/ErP2MPJ2FBCAIuaKhXGE9YtARuf2xUf7AAmrsm4RKC+XmLc5lsWc3U
      FcamDAb6JTW1OpvX2eho1BiaMTBtq5d4+HFxxxFASovY7BSRePpRtudzidDtTAc3YmQWgoqB
      zwYtJucljjuUJC2a0OvZvOoqmhAKI+GX2NCgsKVFoTko2RA2+cZGSQADS0ImLykYCr/UvrGq
      134c3NEMevzTA1S1NqOvlRJ+JLjMPK6i4NSFEucvGXg02FAv6E8qZIpL9x1Pa7yb7iJe+3Bi
      Neart3I2Wh75R2csQu7yXKjBY3HqbIYrQ0V6mlT0bPQeZ3ryuYMKZBGbT6F7fcSisdvvssaq
      4s/PY1mw0SNx2SxiBUnfsMKGJpVTQyZ7Gsuq0S9yGzhR+ybSV7kqKRVvh1A15iw/MEfJkNhU
      iCQlkYLCng0aZ0ctrsy6MdxPv3p8BwFQefMb33y0LfmcY7fy5CwLl2YhEIQckC1Z9E4pzCbB
      lJLZnMKxmrfKMcMPuT3DogUpBymYcHZG0FCt0lldnjv0T5hccr+Fs7L+Ibfi4bOm3zwBSClx
      R4eo85pllxxRrjTZ4BH4CiavtpUtMRNm8IYwyofLbPVO3r3gxGUXPN+jUxdSSOYkvVMWzR21
      UNX0SNrxsFkTgCcBy6SUyxB0slAVvlyeNFkURJOSdAGieZ0Par6DsD0aF0xpczJes4cNTTda
      jCQFqfOR+xuIVahb/CSwJgBPCLo0Maxra35lBWc+Bz0ui0zE4nvKGxTCrY+sPUIIZu2N5IpQ
      Msv1ANKmk4/936YUfLhZQh4lT39Q5zOAkktSJROoNywgCgROm8KHpTYKNbVEW/c8dL3/ZqS/
      mh9OvkRCr6QkbOS99QjPHRYlnlLWBOAJoGriFCGbgfOmb6PGKSm6Ghjs+uqKO780jbL7iHL/
      LpxCtzPRfL1+wbO4vv+5EIBrnqM3cru8/4+LcHYaoVyP0JLS4lDcz6SnjeHmVUpAu4yO/3ni
      cyEAhmHwv/7lB8ynr68ofWFLI7/+pR2PsVVlpJToRh7XQmxJwYThtMYv638V2bh64VZCCKRl
      lZNtrQnDIisWgGwiSu/QBNVBL0VXgNzsGI1t63E7nizZmk0WiCQKi3+n8g+WdGrVMUqcHomx
      bWFeWbIE33d9Gdmw+okIHtbC2dPMip9IPJ2hs7WBWCJHNpsknU5jmQ8n1feziMxnsJtFcguO
      ldGSDbNx/YpqhK1x/6xYAAJeN73D44TDITyKQaiu9Y7VR9a4FZmO4zNTWBakSoIfB74Cvqff
      xeBpYcV6issXZuuW8JLPpJRYloVlWQghqPC7aKlZTHFAXdCxuA9AwONYst3n1JZsVxWxZDuA
      y64vbnfY9Fu2a5q6uF1KSUOlD5fz+hwg5HUuCbU8dXmYbP66f3vQ62DDunIg+0OtZZaK0umH
      gAMcqiScnSS29vZ/ZAj5EEqTXDvlvSrF32v7NQG6k8uvlBIp5V076ErbYJommqZhWRb/16U4
      M8bqTiALR39O1/gBfqPbxEThLwPfZr7hyc/GB+AQkv+w3o2ur1JFy0eMEEI8lJnqtQ6rqiqW
      aSLuEFurquU8k5Z1+06sKMqSyKXbCsI9hEBV1cUMaJZloajqEnu2qpZHijvFFj9sU6mwOTGl
      RFPgA7OHaO22cmlV01zwiLh9u9ZYHR6qqUaIHKdPXqW5oxmf14tlGOTyeQKhIArlDp2PT3N+
      LMXGtmrSBQtVWphGHpevArfTxpXzp/BV1mFZCqqwqAiHyOTzBP1+hBCcOf0Z4dpmfA4F1eHB
      pqsgLez2cjkgrDxHj11kQ1c1n12KsH1jG/mSQU1VOZoqF4/QNxHF6fRQ4bNjc3lIpbLUVFci
      xB2EbjWfkS/IeFpwZkbQFwgtRmuZwxcxTn2M/av/ElxPexmKJ5eHbqu0LBMjF2MyXyAdieEK
      +QmGrifbGhqbIh/PMjUtyZZU3DokY7OY9iTbN3XjC1eTis6QShepr6/kwoX/v70z/Y3rPA/9
      75zZ94UcDjlDUiRFUqIkxwtl2YkVx77xTZAWQQs0LXCD9AL38724adG/okWBfmiBAv3SfmiA
      tOmSplF2V04iW7IlWbJkkaJWUiI55Gyc4Wxnf/thKFK0uFscksP5AQPpnTlz5uHM+5zzPut7
      m67BlW0Zent7SOUKVIsWljWPLxRE1zQGjw4CkJ2dRdPLFKtRjg4OMDOTxuW1w5ICKBWFnqND
      LEyNMV8II83Pki3pRNqiuB277y+3dw9TdYU4N6sS0B4hLAtJlrENnMLWM4zkdO+6DIeZXVYA
      J6GQF9kdRs+l6Uh2Eg4HqFbKICR8fh+JIwMcPWonv1jEZspE/B4kBJ5gffeXUDhM2OehZkpk
      M1mOHu3HF/RTrpSRhIxSU4hE20ApYvNFqCxkCEbaKJUq2Ow23KEYXz7bS7m0iN3tpy3gxrI0
      KuUKQhKEuxI8uHeftuQQpews7lACnGVUpYapgc/3vFoPro3k9uL8yh9S/q9/orP4GOnD75Mf
      egu5PQFbmPxuyUKx5ObMU2gAu2IENyNCCB4Wqmi71AtKqFVEIYMcagf3wSg2lyU4GnLvm5SS
      7SJJktRSgBaHFkmSWhXvLQ43LQVocahpKUCLDVlIz1DbJ3mDu8H+Stlsse+Yf3SXqC/BxPWL
      CHcIvbRA38hLdER21zvWKFbdAfRaiWsfX2Xi/iOel2WsVYtcvXqVuw+n1+qSvib59DSF6s4v
      O6ZWo1CqrnpOCJMrly6QK21/29fM7BQV9fm3ST8IWIbG+O0J5jI55h4/ZH6hRLWYZz6bRTMO
      fnv0VXeAwswEujeJX8xx+abFid4gZQ06Y2GqlRpVRSEaCjA9M0c8kUQp5dFw0h7ysVguUVys
      0dUR4T9/9BNOf+kNepOdLDy6jxnswlV5xNV7No53uFhULLo62igvLrBQrJDo7kZTqni9Xsrl
      CoVsCrstiqQUWKyZ9XP+8Me88voX8TtMpEAcn6SSzpdJJjupVcsUFwqE2uP43E6UQoobMzqn
      h7spLxZwBSIoc2Pcz1iMOGSy8yns3hDhgIdceg7h8HL9wi/oGjnDcH8PC+kU7mAbQa+LfHae
      sbGbjLyWxNccjRC2xfEzX2XIFMjyYL1to7BY6t2yZtv6g8YzNoCiVFE1E4co89uPPiUzeYv7
      qQw/+N73UQzBb399HsluI596yNWxKe59cpn5TIqf/+YyauYuN6fLOB0OPE/toKbUaqiGAGWB
      Sx+PU8084JM7Kd5995fIQuc371/m6pXLgOCDC+8vv69YKJKZGuP6vVkcDicej5vF7CPKqsWv
      f3MBoS1y8cqnnP/VzzCBSx9+uOpvef/8r6jo8OHFSzhlCbvHR2ZyjHupIlcufcDDiRvcTxUx
      dA2H04nX42Xq1lVmiiqXP3if6fufMj69sKpY/dChG2gffYRy6SOUi5fQ797DZrNhWyd36qDx
      jALks2ns4V5O9fhIZQuUNIFdmAwcP0l3PIolO+lJJrEZFTK5HKYsYegWid4+ehIxNAuCoRCx
      tifpDoJ8Jo0nPshwzEU4lqR/aIBiNkM0Fqe79whCrTw5dDn5zTI0xiYmcDgclGsawVCI9rZo
      PVFMGDhcfnr6+tGqBYLRGD3dPTjk1csUtz9CX08Sj8OO3x8gFGmjupgjn89hkx3kCgV6+wfo
      7IgRCAZpb28nnclSWkhjdzpIPc4yODJMW2R1qvVhwipXyP313yw/Sud+utciPVdWLYE84Tin
      X4rQ3e4HITh9LE1VB7/fTzLZBcicGOzl4qVLDA6PMNhVRbckAsEQSZuOzWvRZfMgaOfqzduM
      vnAcbzTO6ViY7jY/QrThmrnCpSspXj3zGj/9t3/k/fcv8uKZ1ynPPeDS5SsE2+KEom3IPjft
      kRCqZSPRGcEbFnz8yS2OxBPYPW56O0NcvHSFUy+NspibBSCZrOfvO7whkjETKVD/85LdSWRv
      kN4OGwMdr7N49To4gpx6YZhPrl0h155g4OgQN65d4cUzX+T6J7dwB8KcGunnow8vgCzR4zz4
      V7sWz7KnkeDbE+McP3bA99lscoxcntn/+/+Wx55XXyX2Z3/KfDpLvONgV661UiFabIpVq1H+
      1bvLY3tXJ97TB6NgZzNaCtDiUPPcKsKeVFS1aEKqVfjhv66Mu3vhza/snTzPmeeiAK2bSBMj
      BChPBQ91bf1jDyCty3aLQ01LAVpsjCSBz7fyWKq1nk9n91iw58NzMYI3ay3SYh8iBBgGHNCW
      Js+DXWuL0mKfIwSUS6Cq0L7xXsNVVefHH9xZHifbA7zxQnNsjwTbNIL1WonbExPY3SGq5RL9
      x0aIBjy7JVuL3UAIWCzC4iK4N//tqorO9355c3n8+onuw6sAdqcHj9tDRVcZOtpHSVEwvU5M
      02x5gg4CQkChgFRZ2vzcMhGG8cxh+2nvhN1mWwqgKhV0S6I72cV0Ks3R2MjWIwAADh9JREFU
      oWFstrodfVi+sAOLELCQB6UGT34r2Qb2na2CmyEVAlpG8OFACMjn6kGtp3F7ILaxDaDqJh/f
      SS2Po0EPx3raNnjHweG5pUK0FGAfY1n1yV+rPfvaFhRACIFurUwRWZKwN0l9RMsL1OxYFuSy
      qyO526SqW/zLjRWff2/YxduDzbNTZEsBmhXLgmwW1J1P/sNAKxLcjDy58u/i5Ne05uiV0roD
      NBuWBbnc51r2PI1NkogHVqLF4aXNjMvVClHnwV8KtYzgZmK7a/4tGMHNTMsIbiaeuDo3mfzV
      Wg1V0wgHg2t2VNd1fdWWR0Ipovz6L5bHtvhJnC99+3lJvee0FKAZEAIKC2u7Oj/Dxzc/JZPP
      8cXRUaoCUnfuMDg4yPj4OMlkknQ6zRtvvLFyal3BGPuPlRNoZXjp2zyefkxPd89u/DUNZVsK
      YChlJu5PEg4ESRdLHBsexus6vNmE+4InuT3l8pYO13QdWZYZu3OXoZERHj58iGEYRCIRstmt
      pzhrWnMUxmxLAWxOD5FQAJtsR7ZMdMPCtJutXKC9pFxCKhS2fHiyM04qLXFiaIhgW5Senh4C
      gQBzc3OcPHkSm822NZtOtrNYLBIMHeyeSdsygquFecYezpPsipHPZkn0DRLxe1pG8F4gRH3J
      k/schSlbiQSbOlb+4fJYcvmRg4mdf+Y+opUKcZBRVcik2XLH4SWmZmaYmp4mEY8zVypx9nd+
      l9u3b1MsFvH5fKiqyujo6MobLBMq6ZWx3Q2eyLMnPoBsskOM4PatMea3sS5s0SBMs+7x2cG1
      KxaN4nA4iEWjSEtvTyQSWJZFT08PxmfTo/UKXPnblce9nwGwWFr8vH/FvmADBVA5/+Ofc/mT
      8cZJ02JzhKgHutbI498Kv/3oI4qLi5y/eJGqUiObzfKLX/wCTdM4d+4clmVtyZ7LZDI7+vz9
      xgZGsJ1jXxiiqlYoVHXC3pa3Z88RAoqFz5Xi8PWvPNXTx+2B9na+9a1vbfs8NUWlUqng8x2M
      HS3XYwMFMNF0sMwS6fki4f6DX/zQFFQ39/VvGUOvK9VGbc5lB3S9sjIO1A3g4aGhptgfYMM7
      gA2Djr4TDLcmf/PwpBvEo6l6XfDXvr5xbbDDA8d//5mnnU3STWIDBdAxVJNCsdQ4aVrsLroO
      jx9DLgOJbhg5sWlh/KJS5K/e+/Pl8Uj8BH/08nd2W9KGsa4CZGanqMle2hwt9+aBR9dherru
      Nk0m4ZXT9bpgefPf1jANJtJjy+OgO7ibkjacdRUgEOlkeMiksyfZSHlaPE+MpYmfnoeOOLwy
      uuMi+GZlXTeo2+Piwd075BdW/L2GWmV87Bb5/AK3xsZR9YO/S2BTYhgw+RCuXgVZhtHT0Nf/
      XCd/s7RG3OAbsVHIzPM4NcfwQD3rz+ZwE2uLMD8/R09XnGyhSGc02MoFahRCIFlmPRC2FoaB
      nJqFuTmsjg54+ZWVFihrvWcLfYEi3ih//+3vL78mS/Xnm6ElCmziBlXKCupTWX/V4jwTD2fp
      6Wrj7oNJ+odHlr+oVipEAxCivm63feZiYxgwMw1zqfpSZ3QUm8O5+fm20BfIEAZT5fvLY78j
      QMLXPJ3hNsgFUrl/J4VklxgYOLLhSVq5QA1CCEilwFy6aptm3auTmoF4J/T0bq/Z7RaS4Ur6
      In83/pfL48HgCL/X9792Iv2+Y5OKMJmpB7cJJ/sbJ1GLrWGaMDsLM48h1gGjr4JzC1f8Fs+w
      QS6QRTabx+FoeQ32DULA3Cx8fKWeDvHyKBwd3JPJfwiMYAe9R/oI+FzrH9KisVgmaBp84cXl
      jSp2G5fs4mznO8vjqKtu/B4CI1jn7o1PWcROX0934yRqYoRloXxyAyObRWxQUrjWa45kEu+r
      p6G3b8UGaABOm4vXOt5s2Oc1mnUUQHDh3fcI9w/w9huvNlaiJka7e4/iv/8Q35fPIvv96x4n
      OZ81ZG2hvYnA5qsV/v+//vPy+HTvEf7kK/9jT2TZDdZRAAtdM1AXi1wfu8urp4YbK1WTYpZK
      uF84ReB/vrP5wWuxB7EWyxLkn+oqXVbUhsuwm6yjADbe/sbvYq4XcGmxI4SqIu3QYL18+TIP
      HjxgtLsbv8dNuVIh1tbG5PQ0Qb+f6VSKL58585wlbn42sAEUzv3bOQa+8DKnjg00TqImRig1
      ZM/Ot5Tyeb08fPyIRCzG1Zs3iUXbcDoclMsVLGt30lJkWSLi9S6P/a66U6RZNsjYOBUiN8vj
      VM+yApi6wmJVJ+hxYsh2XPZW8Gs7WDUF2w7biMTjcQoLCxzr6qQzGiVfKBBYuvL39/bsWn5+
      1Ovje3/8f56VpwkmP2yoAAbx7mPYrJXyO5vDTa2cw6bJ3J/Lc2z4GC671MoF2iJmpYLcEXu2
      8HwLJBIJEl1dSPNzYBh8aalzwwvHjq2cf7tL1i3kAqmGwcfTU8uvRb0+jnV0blv+/cr69QDz
      eXRlAU/HieXndKXM5OQkR/r7sVs65ZqCN1z3ZrRSITZH1GrYAwHsO8jKzGQyTE1NEdY1rn9y
      g2+8/RYet5ufnn+PgSO9PJqZWV3vuxW2kAukGgbv3V/ZJnU4Fj8cCtAWi/Ly619FklZ80g63
      ny8t9Y1MJpqjOVIjEYqC5NxZYDEWizE7O8vRRIJcJovX4+H6rTFkWaY9EuHWnTsIIZCaoE63
      kaybCpGausNPf/IzJlPNEfLeD1g1Bfkpg3I7zM7OcuPGDWbn5+jqiLFQLOJw2Mnkc0xOT2O3
      2RvqJW36VIhk/3F6EjNoz2mjhRZLblDXzu4AiUSCP/7Od+p7AGgqaBrRri5OvfACmCavCrE6
      TvB0t4flf2WQpaWUanlL6RQeh4PfP/XS8jiw9J5DYATbcTocJJIdjZOmyRGKguz+HLlVklQv
      cPF464/lE4uVx9PPPa0AEoC0cQuUNXDYbIzEu3Yu8z5ng2xQk9TkIx7NNsetbq8RQmCpCpJ7
      F5LYJKle+mizrTzs9pX/y3L96i9J5HI5zp07x7Vr17Asi3w+v2sxhIPAuqkQl37zLq5oJz1d
      8cZK1KxYFpIkI8l7uy/hg4cPefudr/HBhx/xd//wj7x0YphKpUI2myUUCjExMcF3v/vdPZWx
      kazza8iMvn4Wh1Qlt1BsrERNijCMlfrcRn+2EOimoKgYhBN9/OBH58Du5vU3zhIKhejr6+O1
      114jHA5z/PjxPZFxr1jXBnA4bRi6THSPshCbDtNEanDk3BKCmm5R1UxUs24feHwBvvq1bwDg
      tsu0+1YiyH19fQ2Vbz+wbjr0vfH7xHs7MRqYe97MCNNc9w4ghCCdTuN0OgkGg58rqCiEQLcE
      Fc2kpltYa7hGVVUhn8vR39tNtVqlUCjg9/vRNI329ubw7myVde8AXT19xBLWqu4CwjJIZxaI
      tYeYnJqht68Pu9wKvGwJw0Syrf11VyoVxsfHCYfDzM3Ncfz4cYQQTE9PMzw8zOTkJGfOnNkw
      yPXkal/RTDRz/YCAEIKb16+RzaYJhz3cunOHYrGIJElYlsU3v/lN5D22UxrJOgog4fMHAJhP
      zeP31jMYLcuiUq0izdcI+Dyk80XikcCWe8ofZsxqBVzONfOAVFUlEAjgdrvp7e1lfHwcl8tF
      PB7n2rVrTExMcOrUKVxrxBAsARXNoqKbmGtd7pcRaJaGYioUtQWK2gKLtXrTM9M0OXnyJBcu
      XMAwDGw226FJbdkgDqDy8x/9ksVamTfe+SaJNh8IQam4gCMSpFKsEu3qXr5aHKarxk6wDAPZ
      7V5zYkWjUVKpFB6Ph1gsRiwWw2az4Xa7iUQiRKNR3G73qu9YNwUl1aRmmEvufwn5M3djCwvN
      VFFNBdVUsETd3dlztA/ket/PkZERHj9+jMPh4K233lq1R/BhYMO2KGARbW/H0utZhpIk03vk
      CB6vj7Cm4ff7n4q1tJZCG2FVq8he77rf06lTp5b/730qXcLr9ZJYyrt6sr4vKSY144nvXlr+
      DYQQCASqqaCYNTRTRbByV3jy2cFwiJMvv0jI5aUj2kFHx+ENdm6oANGwl5Tipruz7gmS7Q4i
      kfoGaW5Xqw/NdhC1jYthNE3j/PnznD17lnK5zI0bN+jv72dsbIw333yTcDgMQK6qY34mbiWE
      QLNUakYV1VRWTfqnsQSoukxNl6lpMjNC4kjIwmk7vHfvjXeIMe0MDTRPG7y9xNpEAW7duoVh
      GGiaRi6Xo1gsIoSgs7OT0NNFNEtzWwiBIQyqRgXVqGGxohVC1Ce7ZsgoSxNe1WWEAJfDwu2w
      iPgM4n77oZ78sEEk+Cf/8gOyizqB3mNrH9JiW1i1GtIGCtDV1cWjR4+YnJwkHo8jyzLBYBBd
      11ctmwSCqlGlZlTRLW3Nya4Z9cnutNcne8hj4Apa2J5KBaovl1ou7nV7g6q1MrfHbmG4Ioxu
      0hWi1Rt0cxZ/fA45GMT/5pd3fA4hBJ9mZigqOjXNtjzhJcBhE3icJh6HhdNu8STm9uTnNYRK
      xVigYhaoGAWqxgIOm50/Ovq/8dh3lqJ90NmwN6jL4+fF0dcaKU9TUy2WqTl8pGcXdvT+kM9F
      KODmfsaOJSS8TougxyAetHjiHKovi1RqZpmKvkDFKFI1C+iWiizJeG1hfPYI7c4+XO4XaXeH
      D+3kf0Kr8WcDyC1Wee/D24gRG+nSxI7OMZiM8o3XhxiIaaiGjoWBatbI6XmqRpGKuYBm1QCB
      Ww7gs0cIOzrpdB1Dwo6wZAxh1WM2JqimQHO0lkAtBWgAmYUqlqLwB++8iGtoCGDNwOEq781n
      X5ckLGFwp3SJBTUNCJyyB48thN8epc3Zg13yIIQd0zIxLAvLFKgmgLX0aPFZ/hv/SOwcsmWO
      NgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='79' name='Sheet 1' width='192'>
      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
      Q0NDZGdnExkZiSzL1NfXc+7cOXJzc3n++ecnLev3339HkiR27tw56TYPN1hSUhLd3d0cO3Zs
      QgCGh4c5ceIEycnJbN26Fb1ej8PhwGq1kpWVhU4X8LUyAcmyTF5eHtHR0Wzbtg23283p06ex
      2+3s3buXhQsXIssyN2/e5OrVqxw5coSEhAQaGho4deoUmzZtYsOGDej1erq7uzl37hwLFizg
      9ddfD3pBeBQz/ViUnp4eTpw4wcaNG1m7di1arZauri4aGxvJzs4OuI8syxQUFFBTU8OhQ4cw
      m83PzuPRa2trkWWZJUuWTLqNLMvcuHGDjIwMjMaRZ11v2bJlzDYqlYr09HRefPFFrFZr0AC0
      tLSQmZkZtF6tra20tbXx4YcfAkzaKxUXFxMfH8/u3bv9J5nRaGTjxo1Byw+kra2N9vZ2cnJy
      gJEQrlmzhqVLl6JW/z1qzc7Oprq6mu7ubhISEggJCeG9997DbP77Oepms5ldu3ZRUFCAy+Ui
      LGz2v2FDlmV+/fVXf9BHWSwWLJbJXxXZ19dHdXU1Bw8e9LfRMzEHkCSJoqIiNm7cGLSbbmtr
      4/79+0G7OACPx0NdXd2YocF4LpcLSZLGnCyBLFq0iFdffTXgkGeU0+nkzp07rFu37l9fYWVZ
      pqioiMzMTH/IdTody5YtG3PyA3i9Xnw+n7/NFi1aFPB4XC4XWq024DBsNurr68NmswUdKQRi
      t9sJDw/3tys8Iy/IqK2tRa1WT3n1H39ijOd2u2lububq1atER0ePuTqM53K5aG9v5/PPPwdA
      rVZjNpvZsWMHWVlZE062YFwuF0NDQ1itVn744Qc6OjqAkTH6nj17gh7XeKMhz83NDbqdJEn8
      /PPPhIWFBS2/sbGR/Px8Dhw4QEhI4LdbzjZ2ux2v10thYSHl5eX09PSgVqtJTU1l//79xMbG
      BtxPp9PhdDqRJMnfE854ACorKykuLubw4cOTXv1lWebMmTPExMSwbdu2SctSq9UYDAZiY2Op
      qamhs7OT+PjAL74zGo189NFHE5a3trby9ddfc/ToUebNmzetY5AkCZ/Px7p16ybMJ/Lz87l9
      +zb79u2bspzW1lbOnz/PkSNHAoZckiTy8/P93fiBAwcCltPY2MipU6d47rnn2LNnD8ePH5/W
      ccwWbrcbjUbDjh07eOWVV/zLvV4vJ0+eZPny5QHnAXFxcbz77rtcvHiRkpKSkZ7xaVZ8vNGh
      zwsvvDCtoc9UV0WNRkNMTAx79+4lLi6Oy5cv89Zbbz1S1z9v3jxUKhU+39SvSxoVFhaGLMvY
      bLYJQ6XExETKy8unLGOqHs7j8XD27Fl0Oh3Hjx+ftL0aGxvJy8vj4MGDpKSkTPsYZhODwcDg
      4CBDQ0NjflzQaDTEx8fT1zfpi27R6XTs37+f/fv3AzM8B3hcQ59ATCYTTqcTt9sdcL3L5cLj
      8UxYbrPZUKlUaLXTvzYYDAbi4uKoqKjg4R/VZFnmzp07k/ZCD5tqfnPjxg0A9u3bN+nJ73A4
      /MOduXryw8h3Gx4eTk1NzZjlHo+H5ubmabX3qBkLwOOY+DqdTs6cOUNpaSkDAyOvJPX5fDQ3
      N5OXl0dqaqp/rFdZWcmnn37qv/9QW1vLV199RX19vX8yeffuXX788UdWrlxJRETEtI9FpVKx
      c+dOqquruXTpEi6XC6/Xyx9//EFjY6O/7pIk8c0333Dp0qUx+08V8sHBQaxWK1u3bg0azKqq
      KiwWC8nJydOu+2wUGhpKbm4uV65cobi4GK/Xi8vl4sqVK3i9XtLS0oCRC8Jnn302pgeuqKgY
      853P2BDocVz9dToda9as4fr165w/fx6n0zlhMjtajtVqJT093V9ORkYGoaGh5Ofnc+/ePf+N
      lNEbaKNOnjw5YQjzySefABAZGckHH3xAZGQkJpOJd955hwsXLvDxxx8jyzKpqakcOnQIk8kE
      QGdnJ/39/WRkZIwpb6ohnsfjobu7my+++CLg+pycHHbv3k1fXx8lJSWUlJRM2Obhus4FKSkp
      HD16lLNnz5KXl4dKpSIzM5ODBw8SHh4OQHNzM1qtdkxvaDAY+Omnn/zf+TNzI+xJstlsnD59
      mjfeeIOoqKgZq0dBQQEqlYpdu3bNWB0el5m+ETYVWZY5deoUy5cvD3ov6Jm4D/Ck1dfXs3r1
      6hk9+YeGhrDZbP/oxpjw6Hp6eggNDZ3Q246niB5AePye9R5guhTRAwjCZEQABEUTARAUTQRA
      UDQRAEHRRAAERRMBEBRNBEBQNBEAQdFEAARFEwEQFE0EQFA0EQBB0UQABEUTARAU7f+j2Y9r
      bm/oHgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACbElEQVR4nO3XMY7EIBQFQbOyxP2PS2B5DrDEOOiqkOglLX3G+77vBUFjjPH39Qj4kgBI
      EwBp/wJ4nufyLaBiGwBUOIFIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBp9+5xrXV6B3xiG8Cc8xpjnN4CxzmBSBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYC0e/e41jq9Az6xDWDOeY0xTm+B45xApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQ
      JgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkC
      IE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      7t3jWuv0DvjENoA55zXGOL0FjnMCkSYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIu3ePz/Oc
      3gGf2Abwvu/pHfCJbQD3fV9jjNNb4Dh/ANIEQNoP4tgdicRwNCsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
